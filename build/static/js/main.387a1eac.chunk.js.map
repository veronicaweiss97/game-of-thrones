{"version":3,"sources":["components/header/header.js","components/header/index.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMesage/index.js","components/errorMesage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/index.js","components/itemList/itemList.js","components/charDetails/index.js","components/charDetails/charDetails.js","components/app/index.js","components/app/app.js","index.js"],"names":["HeaderBlock","styled","div","_templateObject","HeaderTitle","h3","_templateObject2","HeaderLinks","ul","_templateObject3","Header","react_default","a","createElement","href","GotService","_this","this","Object","classCallCheck","getResource","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","res","wrap","_context","prev","next","fetch","concat","_apiBase","sent","ok","Error","status","json","abrupt","stop","_x","apply","arguments","id","map","_transformCHaracter","character","char","name","gender","born","died","culture","house","region","words","titles","overlord","ancestralWeapons","book","numberOfPages","publiser","released","Spinner","class","ErrorMessage","Fragment","src","alt","RandomChar","gotService","state","loading","error","onCharLoaded","setState","onError","err","updateChar","Math","floor","random","getCharacter","then","catch","timerId","setInterval","clearInterval","timeriId","console","log","_this$state","errorMessage","errorMesage","spinner","components_spinner","content","randomChar_View","className","Component","View","ItemList","charList","_this2","getAllCharacters","arr","_this3","item","i","key","onClick","props","onCharSelected","items","renderItems","CharDetails","prevProps","charId","foo","bar","_this$state$char","App","showRandomChar","selectedChar","toggleRandomChar","components_randomChar","classBtn","Container","components_header","Row","Col","lg","size","offset","md","components_itemList","components_charDetails","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.387a1eac.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 80px;\n`;\n\nconst HeaderTitle = styled.h3`\n    font-size: 24px;\n    color: #fff;\n    margin: 0;\n`;\n\nconst HeaderLinks = styled.ul`\n    display: flex;\n    margin: 0;\n    align-items: center;\n    color: #fff;\n    list-style-type: none;\n    li {\n        margin-right: 20px;\n        font-size: 18px;\n    }\n`;\n\nconst Header = () => {\n    return (\n        <HeaderBlock>\n            <HeaderTitle>\n                <a href=\"#\">\n                Game of Thrones DB\n                </a>\n            </HeaderTitle>\n            <HeaderLinks>\n                <li>\n                    <a href=\"#\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"#\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"#\">Books</a>   \n                </li>\n            </HeaderLinks>\n        </HeaderBlock>\n    );\n};\n\nexport default Header;","import Header from './header';\n\nexport default Header;","\nexport default class GotService {\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\n    }\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n    \n        if (!res.ok) {\n          throw new Error(`Could not fetch ${url}` +\n            `, received ${res.status}`);\n        }\n        return await res.json();\n    }\n\n    getAllBooks() {\n        return this.getResource(`/books/`);\n    }\n    \n    getBook(id) {\n        return this.getResource(`/books/${id}/`);\n    }\n    \n    async getAllCharacters() {\n        const res = await this.getResource(`/characters?page=5&pageSize=10`);\n        return res.map(this._transformCHaracter)\n    }\n    \n    async getCharacter (id) {\n       const character = await this.getResource(`/characters/${id}`);\n       return this._transformCHaracter(character);\n    }\n    \n    getAllHouses() {\n        return this.getResource(`/houses/`);\n    }\n    \n    getHouse(id) {\n        return this.getResource(`/houses/${id}/`);\n    }\n\n    _transformCHaracter(char) {\n        return {\n            name: char.name,\n            gender: char.gender,\n            born: char.born,\n            died: char.died,\n            culture: char.culture\n        }\n    }\n\n    _transformHouse(house) {\n        return {\n            name: house.name,\n            region: house.region,\n            words: house.words,\n            titles: house.titles,\n            overlord: house.overlord,\n            ancestralWeapons: house.ancestralWeapons\n        }\n    }\n\n    _transformBook(book) {\n        return {\n            name: book.name,\n            numberOfPages: book.numberOfPages,\n            publiser: book.publiser,\n            released: book.released\n        }\n    }\n}\n","import Spinner from './spinner';\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div class=\"loadingio-spinner-eclipse-fpiyocl43g\"><div class=\"ldio-jydcjbj17a\">\n        <div></div>\n        </div></div>\n\n    )\n}\n\nexport default Spinner;\n\n\n\n\n","import ErrorMessage from './errorMessage';\nexport default ErrorMessage;","import React from 'react';\n\nconst ErrorMessage = () => {\n    return (\n        <>\n        <img src={process.env.PUBLIC_URL + '/img/error.jpg'} alt='error'></img>\n        <span>Something is wrong</span> \n        </>\n    )\n\n}\n\nexport default ErrorMessage;\n\n","import React, {Component} from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService';\nimport Spinner from '../spinner';\nimport ErrorMessage from '../errorMesage';\n\nexport default class RandomChar extends Component {\n\n    gotService = new gotService();\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateChar();\n        this.timerId = setInterval(this.updateChar, 1500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timeriId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random()*140 + 25);\n        this.gotService.getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        console.log('render');\n        const {char, loading, error} = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n       const spinner = loading ? <Spinner/> : null;\n       const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"random-block rounded\">\n                {errorMessage}\n               {spinner} \n               {content}\n            </div>\n        );\n    }\n}\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char;\n    return (\n        <>\n            <h4>Random Character: {name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Gender </span>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Born </span>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Died </span>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Culture </span>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </>\n    )\n}","import RandomChar from './randomChar';\n\nexport default RandomChar;","import ItemList from './itemList';\n\nexport default ItemList;","import React, {Component} from 'react';\nimport gotService from '../../services/gotService';\nimport './itemList.css';\nimport Spinner from '../spinner';\n\nexport default class ItemList extends Component {\n\n    gotService = new gotService();\n\n    state = {\n        charList: null\n    }\n\n    componentDidMount() {\n        this.gotService.getAllCharacters()\n            .then( (charList) => {\n                this.setState({\n                    charList\n                })\n            })\n    }\n\n    renderItems(arr) {\n        return arr.map((item, i) => {\n            return(\n                <li \n                    key={i}\n                    className=\"list-group-item\"\n                    onClick={ () => this.props.onCharSelected(41 + i)}>\n                    {item.name}\n                 </li>\n            )\n        })\n    }\n    render() {\n        const {charList} = this.state;\n\n        if ( !charList ) {\n            return <Spinner/>\n        }\n\n        const items = this.renderItems(charList);\n\n        return (\n            <ul className=\"item-list list-group\">\n               {items}\n            </ul>\n        );\n    }\n}","import CharDetails from './charDetails';\nexport default CharDetails;","import React, {Component} from 'react';\nimport './charDetails.css';\nimport gotService from '../../services/gotService';\n\nexport default class CharDetails extends Component {\n\n    gotService = new gotService();\n\n    state = {\n        char: null\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar() {\n        const {charId} = this.props;\n        if ( !charId ) {\n            return;\n        }\n\n        this.gotService.getCharacter(charId)\n            .then((char) => {\n                this.setState({char})\n            })\n        this.foo.bar = 0;\n    }\n\n    render() {\n        \n        if (!this.state.char) {\n            return <span className=\"select-error\">Please select a character</span>\n        }\n\n        const {name, gender, born, died, culture} = this.state.char;\n        return (\n            <div className=\"char-details rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born</span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died</span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture</span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}","import App from './app';\n\nexport default App;\n","import React, {Component} from 'react';\nimport {Col, Row, Container} from 'reactstrap';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport ItemList from '../itemList';\nimport CharDetails from '../charDetails';\n\nexport default class App extends Component {\n\n    state = {\n        showRandomChar: true,\n        selectedChar: 130\n    };\n\n    toggleRandomChar = () => {\n        this.setState( state  => {\n            return {\n                showRandomChar: !state.showRandomChar\n            }\n        });\n    };\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        const char = this.state.showRandomChar ? <RandomChar/> : null;\n        const classBtn = this.state.showRandomChar ? \"btn btn-danger\" : \"btn btn-secondary\";\n        return (\n            <> \n                <Container>\n                    <Header />\n                </Container>\n                <Container>\n                    <Row>\n                        <Col lg={{size: 5, offset: 0}}>\n                            <button onClick={this.toggleRandomChar} className={classBtn}>Toggle random Character</button>\n                            {char}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md='6'>\n                            <ItemList onCharSelected={this.onCharSelected}/>\n                        </Col>\n                        <Col md='6'>\n                            <CharDetails charId={this.state.selectedChar} />\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        );\n    };\n }\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}