{"ast":null,"code":"import _classCallCheck from \"/Users/veronica/Desktop/React_step_6/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/veronica/Desktop/React_step_6/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/veronica/Desktop/React_step_6/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/veronica/Desktop/React_step_6/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/veronica/Desktop/React_step_6/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/veronica/Desktop/React_step_6/src/components/randomChar/randomChar.js\";\nimport React, { Component } from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService';\nimport spinner from '../spinner';\n\nvar RandomChar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RandomChar, _Component);\n\n  function RandomChar() {\n    var _this;\n\n    _classCallCheck(this, RandomChar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RandomChar).call(this));\n    _this.gotService = new gotService();\n    _this.state = {\n      char: {},\n      loading: true\n    };\n\n    _this.onCharLoaded = function (char) {\n      _this.setState({\n        char: char\n      });\n    };\n\n    _this.updateChar();\n\n    return _this;\n  }\n\n  _createClass(RandomChar, [{\n    key: \"updateChar\",\n    value: function updateChar() {\n      var id = Math.floor(Math.random() * 140 + 25);\n      this.gotService.getCharacter(id).then(this.onCharLoaded);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          _this$state$char = _this$state.char,\n          name = _this$state$char.name,\n          gender = _this$state$char.gender,\n          born = _this$state$char.born,\n          died = _this$state$char.died,\n          culture = _this$state$char.culture,\n          loading = _this$state.loading;\n\n      if (loading) {\n        return React.createElement(\"spinner\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"random-block rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Random Character: \", name), React.createElement(\"ul\", {\n        className: \"list-group list-group-flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-group-item d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Gender \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, gender)), React.createElement(\"li\", {\n        className: \"list-group-item d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Born \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, born)), React.createElement(\"li\", {\n        className: \"list-group-item d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Died \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, died)), React.createElement(\"li\", {\n        className: \"list-group-item d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Culture \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, culture))));\n    }\n  }]);\n\n  return RandomChar;\n}(Component);\n\nexport { RandomChar as default };","map":{"version":3,"sources":["/Users/veronica/Desktop/React_step_6/src/components/randomChar/randomChar.js"],"names":["React","Component","gotService","spinner","RandomChar","state","char","loading","onCharLoaded","setState","updateChar","id","Math","floor","random","getCharacter","then","name","gender","born","died","culture"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,kBAAP;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;;IAEqBC,U;;;;;AAEjB,wBAAe;AAAA;;AAAA;;AACX;AADW,UAKfF,UALe,GAKF,IAAIA,UAAJ,EALE;AAAA,UAMfG,KANe,GAMP;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,OAAO,EAAE;AAFL,KANO;;AAAA,UAWfC,YAXe,GAWA,UAACF,IAAD,EAAU;AACrB,YAAKG,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAJA;AAAD,OAAd;AACH,KAbc;;AAEX,UAAKI,UAAL;;AAFW;AAGd;;;;iCAYY;AACT,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAd,GAAoB,EAA/B,CAAX;AACA,WAAKZ,UAAL,CAAgBa,YAAhB,CAA6BJ,EAA7B,EACKK,IADL,CACU,KAAKR,YADf;AAEH;;;6BAEQ;AAAA,wBACwD,KAAKH,KAD7D;AAAA,yCACEC,IADF;AAAA,UACSW,IADT,oBACSA,IADT;AAAA,UACeC,MADf,oBACeA,MADf;AAAA,UACuBC,IADvB,oBACuBA,IADvB;AAAA,UAC6BC,IAD7B,oBAC6BA,IAD7B;AAAA,UACmCC,OADnC,oBACmCA,OADnC;AAAA,UAC6Cd,OAD7C,eAC6CA,OAD7C;;AAGL,UAAIA,OAAJ,EAAa;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,aACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuBU,IAAvB,CADJ,EAEI;AAAI,QAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,gDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,MAAP,CAFJ,CADJ,EAKI;AAAI,QAAA,SAAS,EAAC,gDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,IAAP,CAFJ,CALJ,EASI;AAAI,QAAA,SAAS,EAAC,gDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,IAAP,CAFJ,CATJ,EAaI;AAAI,QAAA,SAAS,EAAC,gDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,OAAP,CAFJ,CAbJ,CAFJ,CADJ;AAuBH;;;;EArDmCpB,S;;SAAnBG,U","sourcesContent":["import React, {Component} from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService';\nimport spinner from '../spinner';\n\nexport default class RandomChar extends Component {\n\n    constructor () {\n        super();\n        this.updateChar();\n    }\n\n    gotService = new gotService();\n    state = {\n        char: {},\n        loading: true \n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char})\n    }\n\n    updateChar() {\n        const id = Math.floor(Math.random()*140 + 25);\n        this.gotService.getCharacter(id)\n            .then(this.onCharLoaded);\n    }\n\n    render() {\n        const {char: {name, gender, born, died, culture}, loading} = this.state;\n\n        if (loading) {\n            return <spinner/>\n        }\n\n        return (\n            <div className=\"random-block rounded\">\n                <h4>Random Character: {name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender </span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born </span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died </span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture </span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}